#!/bin/bash
# author: Lukas Kluft
# version: 03.06.2014 
#
# purpose: update vim's ARTS syntax highlighting

# path to ARTS executable. This variable has to be set in order to run run the script
# e.g. arts="$HOME/arts/build/src/arts"

[[ $# -eq 1 ]] && ARTS_BIN=$1 || ARTS_BIN=arts

if ! which &> /dev/null $ARTS_BIN; then
    echo "ERROR: $ARTS_BIN not found"
    echo "Usage: $0 [PATH_TO_ARTS_BINARY]"
    exit 1
fi

# create subdirectories in ~/.vim
mkdir -p $HOME/.vim/{syntax,ftdetect}

# path to vim syntax file
f="$HOME/.vim/ftdetect/arts.vim"

# enable file extension for auto recognition
echo "au BufRead,BufNewFile *.arts set filetype=arts" > $f
echo "Written $f"

# generate arts.vim file
f="$HOME/.vim/syntax/arts.vim"

cat << 'EOF' > $f
" Vim syntax file
" Language: ARTS
" Maintainer: via update_vim_arts_syntax script
EOF

echo \" Latest Revision: $(date) >> $f

cat << 'EOF' >> $f
if exists("b:current_syntax")
  finish
endif

" Darstellungswahl der einzelnen Klassen
hi def link ArtsMethod Constant
hi def link ArtsComment Comment
hi def link ArtsVariable Structure
hi def link ArtsGroup Type
hi def link ArtsNumber Number
hi def link ArtsString Statement

let b:current_syntax = "arts"

" Definition der Kommentare
syn match ArtsComment "#.*$" 

" Definition von Zahlen
syn match ArtsNumber '\W[-+]\=\d\+\(\.\d*\)\=\([eE][-+]\=\d\+\)\='


" Definition von Strings
syn region ArtsString start='"' end='"'

" Definition der Methoden
EOF

$ARTS_BIN -p -m all | sed 's/^/syn keyword ArtsMethod /g' >> $f

echo \" Definition der Workspacevariablen >> $f
$ARTS_BIN -p -w all | sed 's/^/syn keyword ArtsVariable /g' >> $f

echo \" Definition der Gruppen von Workspacevariablen >> $f
$ARTS_BIN -p -g all | sed 's/^/syn keyword ArtsGroup /g' >> $f

echo "Written $f"

exit 0
